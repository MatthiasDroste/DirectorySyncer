/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.droste.dirsync.gui;

import java.awt.Color;
import java.awt.Font;

import com.droste.file.report.Report;

/**
 *
 * @author matthias
 */
public class ReportDialog extends javax.swing.JDialog {

	private static final long serialVersionUID = 356885272579092164L;
	private final Font defaultFont = ((MainFrame) getParent()).getDefaultFont();
    private final boolean simulationMode = ((MainFrame) getParent()).isSimulationMode();;
    private final String verb = (simulationMode) ? "would have been" : "were";
    
    /**
     * Creates new form ReportDialog
     */
    public ReportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        changedFilesTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        newFilesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        newDirectoriesTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        newFilesText = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        summaryText = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        changedFilesText = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        relocatedFilesTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        relocatedFilesPane = new javax.swing.JTextPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        additionalFilesPane = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        additionalFilesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Synchronization Results");
        setAlwaysOnTop(true);
        setBackground(java.awt.Color.white);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        changedFilesTable.setModel(new SyncTableModel(((MainFrame) getParent()).getReport().getChangedFiles()));
        jScrollPane3.setViewportView(changedFilesTable);

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));

        newFilesTable.setModel(new SyncTableModel(((MainFrame) getParent()).getReport().getNewFiles()));
        jScrollPane4.setViewportView(newFilesTable);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        newDirectoriesTable.setModel(new SyncTableModel(((MainFrame)getParent()).getReport().getNewDirectories()));
        jScrollPane2.setViewportView(newDirectoriesTable);

        newFilesText.setBorder(null);
        newFilesText.setContentType("text/html");
        newFilesText.setText(getNewFilesText());
        jScrollPane5.setViewportView(newFilesText);

        jTextPane1.setBorder(null);
        jTextPane1.setContentType("text/html");
        jTextPane1.setText(getNewDirectoriesText());
        jScrollPane6.setViewportView(jTextPane1);

        summaryText.setBorder(null);
        summaryText.setContentType("text/html");
        summaryText.setText(getSummaryText());
        jScrollPane7.setViewportView(summaryText);

        changedFilesText.setBorder(null);
        changedFilesText.setContentType("text/html");
        changedFilesText.setEditable(false);
        changedFilesText.setText(getChangedFilesText());
        jScrollPane1.setViewportView(changedFilesText);

        jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));

        relocatedFilesTable.setModel(new SyncTableModel(((MainFrame) getParent()).getReport().getRelocatedFiles())
        );
        relocatedFilesTable.setCellSelectionEnabled(true);
        jScrollPane8.setViewportView(relocatedFilesTable);

        relocatedFilesPane.setBorder(null);
        relocatedFilesPane.setContentType("text/html");
        relocatedFilesPane.setText(getRelocatedFilesText());
        jScrollPane9.setViewportView(relocatedFilesPane);

        additionalFilesPane.setBorder(null);
        additionalFilesPane.setContentType("text/html");
        additionalFilesPane.setText(getAdditionalFilesText());
        jScrollPane11.setViewportView(additionalFilesPane);

        jScrollPane10.setBackground(new java.awt.Color(255, 255, 255));

        additionalFilesTable.setModel(new SyncTableModel(((MainFrame) getParent()).getReport().getAdditionalFiles()));
        jScrollPane10.setViewportView(additionalFilesTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1370, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane10)
                            .addComponent(jScrollPane11)
                            .addComponent(jScrollPane8)
                            .addComponent(jScrollPane9)
                            .addComponent(jScrollPane7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getSummaryText() {
        final MainFrame mainframe = (MainFrame) getParent();
        final Report report = mainframe.getReport();
        int noOfChangedFiles = report.getNoOfChanges();
        double syncTime = report.getSyncTime();
        String simEntry = (simulationMode) ? "Simulation of " : "";
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>"+ simEntry + "Synchronization done in " + syncTime + " seconds. " + noOfChangedFiles + " files and folders " + verb + " copied from the source to the target directory.</b><br/>"
                    + "Overall there were " + report.getNoOfSourceFiles() + " Files and " + report.getNoOfSourceDirectories() + " directories in the source, " + report.getNoOfTargetFiles() + " files in the target."
                    + "<br>Check the information below for the exact list of changes.</font>";
    }
    
    private String getChangedFilesText() {
        int noOfChangedFiles = ((MainFrame) getParent()).getReport().getNoOfChangedFiles();
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>" + noOfChangedFiles + "</b> Files in the source had a different content. They " + verb + " copied to the target with an adapted name.<br>"
                + "Detailed list of changed files:</font>";
    }
    
    private String getNewFilesText() {
        int noOfNewFiles = ((MainFrame) getParent()).getReport().getNoOfNewFiles();
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>" + noOfNewFiles + "</b> new Files were found in the source and " + verb + " copied to the corresponding subdirectories in the target.<br>"
                + "Detailed list of new files:</font>";
    }

    private String getNewDirectoriesText() {
        int noOfNewDirs = ((MainFrame) getParent()).getReport().getNoOfNewDirectories();
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>" + noOfNewDirs + "</b> new Directories " + verb + " created in the target.<br>"
                + "Detailed list of new directories:</font>";
    }
    
     private String getRelocatedFilesText() {
        int noOfRelocatedFiles = ((MainFrame) getParent()).getReport().getNoOfRelocatedFiles();
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>" + noOfRelocatedFiles + "</b>  files have a new location in the target => nothing copied for them.<br>"
                + "Detailed list of relocated files:</font>";
    }
     
    private String getAdditionalFilesText() {
        int noOfAdditionalFiles = ((MainFrame) getParent()).getReport().getAdditionalFiles().size();
        return "<font face=\"Tahoma 13 Plain, Arial\"><b>" + noOfAdditionalFiles + "</b>  files are copied even though they already exist at a different location in the target.<br>"
                + "Detailed list of additional files:</font>";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane additionalFilesPane;
    private javax.swing.JTable additionalFilesTable;
    private javax.swing.JTable changedFilesTable;
    private javax.swing.JTextPane changedFilesText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTable newDirectoriesTable;
    private javax.swing.JTable newFilesTable;
    private javax.swing.JTextPane newFilesText;
    private javax.swing.JTextPane relocatedFilesPane;
    private javax.swing.JTable relocatedFilesTable;
    private javax.swing.JTextPane summaryText;
    // End of variables declaration//GEN-END:variables
}
